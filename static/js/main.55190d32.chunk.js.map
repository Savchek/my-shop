{"version":3,"sources":["components/firebase.js","components/Login/Login.jsx","components/MainScreen/MainScreen.jsx","components/NavPanel/NavPanel.jsx","components/Goods/AddGood.jsx","components/Goods/ListGoods.jsx","components/Goods/EditGood.jsx","components/Goods/PurschareGood.jsx","components/App/App.jsx","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","this","auth","db","firestore","oldGood","Promise","resolve","onAuthStateChanged","email","password","signInWithEmailAndPassword","signOut","createUserWithEmailAndPassword","collection","doc","currentUser","uid","set","goods","sales","pastSales","get","data","alert","good","update","FieldValue","arrayUnion","updateCollection","arrayRemove","console","log","Login","updateScreen","useState","setEmail","setPassword","login","a","firebase","message","register","onSubmit","e","preventDefault","id","name","value","onChange","target","type","onClick","MainScreen","NavPanel","screen","logout","disabled","style","border","AddGood","attribute","buyPrices","buyCounts","sellPrice","Math","random","setGood","updateGood","field","buyData","prevState","addGood","some","ListGoods","chooseGood","title","setGoods","loading","setLoading","getCollection","useEffect","className","length","map","key","p","i","EditGood","buyDataLen","setBuyDataLen","setOldGood","choosingGood","setChoosingGood","saving","setSaving","na","index","applyEditingGood","deleteGood","autoFocus","l","splice","delPutschareItem","window","confirm","PurschareGood","price","setPrice","count","setCount","purschare","check","replace","split","find","isNaN","nGood","priceIndex","indexOf","push","parseFloat","App","firebaseInitialized","setFirebaseInitialized","setScreen","initFirebase","isInitialized","res","screenSwitcher","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55190d32.chunk.js","sourcesContent":["import app from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nconst firebaseConfig = {\r\n\tapiKey: process.env.REACT_APP_API_KEY,\r\n\tauthDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n\tdatabaseURL: process.env.REACT_APP_DATABASE_URL,\r\n\tprojectId: process.env.REACT_APP_PROJECT_ID,\r\n\tstorageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n\tmessagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n\tappId: process.env.REACT_APP_APP_ID,\r\n\tmeasurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n}\r\n\r\nclass Firebase {\r\n\tconstructor() {\r\n\t\tapp.initializeApp(firebaseConfig)\r\n\t\tthis.auth = app.auth()\r\n\t\tthis.db = app.firestore()\r\n\t\tthis.oldGood = {}\r\n\t}\r\n\r\n\tisInitialized() {\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tthis.auth.onAuthStateChanged(resolve)\r\n\t\t})\r\n\t}\r\n\r\n\tlogin(email, password) {\r\n\t\treturn this.auth.signInWithEmailAndPassword(email, password)\r\n\t}\r\n\r\n\tlogout() {\r\n\t\treturn this.auth.signOut()\r\n\t}\r\n\r\n\tasync register(email, password) {\r\n\t\tawait this.auth.createUserWithEmailAndPassword(email, password)\r\n\t\treturn this.db.collection('users').doc(this.auth.currentUser.uid).set({\r\n\t\t\tgoods: [],\r\n\t\t\tsales: [],\r\n\t\t\tpastSales: []\r\n\t\t})\r\n\t}\r\n\r\n\tasync updateCollection() {\r\n\t\tconst collection = await this.db.collection('users').doc(this.auth.currentUser.uid).get()\r\n\t\tif (collection) {\r\n\t\t\tthis.collection = collection.data()\r\n\t\t} else {\r\n\t\t\talert('Can\\'t get data from database')\r\n\t\t}\r\n\t}\r\n\r\n\tasync addGood(good) {\r\n\t\tawait this.db.collection('users').doc(this.auth.currentUser.uid).update({\r\n\t\t\tgoods: app.firestore.FieldValue.arrayUnion(good)\r\n\t\t})\r\n\t\tawait this.updateCollection()\r\n\t}\r\n\r\n\tasync deleteGood(good) {\r\n\r\n\t\tawait this.db.collection('users').doc(this.auth.currentUser.uid).update({\r\n\t\t\tgoods: app.firestore.FieldValue.arrayRemove(good)\r\n\t\t})\r\n\t\t// then pulling data \r\n\t\tawait this.updateCollection()\r\n\t}\r\n\r\n\t// ! fix editing\r\n\tmemorizeGood(good) {\r\n\t\tconsole.log('Memotizing good')\r\n\t\tthis.oldGood = { ...good }\r\n\t\tconsole.log(this.oldGood)\r\n\t}\r\n}\r\n\r\nexport default new Firebase()","import React, { useState } from 'react'\r\nimport firebase from '../firebase'\r\n\r\nconst Login = ({ updateScreen }) => {\r\n\r\n\tconst [email, setEmail] = useState('')\r\n\tconst [password, setPassword] = useState('')\r\n\r\n\tconst login = async () => {\r\n\t\ttry {\r\n\t\t\tawait firebase.login(email, password)\r\n\t\t\tupdateScreen('Main')\r\n\t\t} catch (error) {\r\n\t\t\talert(error.message)\r\n\t\t}\r\n\t}\r\n\r\n\tconst register = async () => {\r\n\t\ttry {\r\n\t\t\tawait firebase.register(email, password)\r\n\t\t\tupdateScreen('Main')\r\n\t\t} catch (error) {\r\n\t\t\talert(error.message)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Login or register</h1>\r\n\t\t\t<form onSubmit={e => e.preventDefault() && false}>\r\n\t\t\t\t<label>Email Address</label>\r\n\t\t\t\t<input id=\"email\" name=\"email\" value={email} onChange={e => setEmail(e.target.value)} />\r\n\t\t\t\t<label>Password</label>\r\n\t\t\t\t<input name=\"password\" type=\"password\" id=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n\r\n\t\t\t\t<button onClick={login}>Login</button>\r\n\t\t\t\t<button onClick={register}>Register</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Login","import React from 'react'\r\n\r\n\r\nconst MainScreen = ({ updateScreen }) => {\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Main screen</h1>\r\n\t\t</div>\r\n\t)\r\n\r\n}\r\n\r\nexport default MainScreen","import React from 'react'\r\nimport firebase from '../firebase'\r\n\r\nconst NavPanel = ({ screen, updateScreen }) => {\r\n\r\n\tconst logout = async () => {\r\n\t\tawait firebase.logout()\r\n\t\tupdateScreen('Login')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<button\r\n\t\t\t\tdisabled={screen === 'Main'}\r\n\t\t\t\tonClick={() => updateScreen('Main')}\r\n\t\t\t\tstyle={{ border: screen === 'Main' ? '2px solid black' : 'none' }}\r\n\t\t\t>Главная</button>\r\n\r\n\t\t\t<button\r\n\t\t\t\tdisabled\r\n\t\t\t\tonClick={() => updateScreen('')}\r\n\t\t\t>Продажи</button>\r\n\r\n\t\t\t<button\r\n\t\t\t\tdisabled\r\n\t\t\t\tonClick={() => updateScreen('')}\r\n\t\t\t>Сделка</button>\r\n\r\n\t\t\t<button\r\n\t\t\t\tdisabled={screen === 'PurschareGood'}\r\n\t\t\t\tonClick={() => updateScreen('PurschareGood')}\r\n\t\t\t\tstyle={{ border: screen === 'PurschareGood' ? '2px solid black' : 'none' }}\r\n\t\t\t>Приход товара</button>\r\n\r\n\t\t\t<button\r\n\t\t\t\tdisabled={screen === 'AddGood'}\r\n\t\t\t\tonClick={() => updateScreen('AddGood')}\r\n\t\t\t\tstyle={{ border: screen === 'AddGood' ? '2px solid black' : 'none' }}\r\n\t\t\t>Добавить товар</button>\r\n\r\n\t\t\t<button\r\n\t\t\t\tdisabled\r\n\t\t\t\tonClick={() => updateScreen('')}\r\n\t\t\t>Наличие</button>\r\n\r\n\t\t\t<button\r\n\t\t\t\tdisabled={screen === 'EditGood'}\r\n\t\t\t\tonClick={() => updateScreen('EditGood')}\r\n\t\t\t\tstyle={{ border: screen === 'EditGood' ? '2px solid black' : 'none' }}\r\n\t\t\t>Склад</button>\r\n\r\n\r\n\t\t\t<button\r\n\t\t\t\tonClick={logout}\r\n\t\t\t>Logout</button>\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default NavPanel","import React, { useState } from 'react'\r\nimport firebase from '../firebase'\r\n\r\nconst AddGood = ({ updateScreen }) => {\r\n\r\n\tconst [good, setGood] = useState({\r\n\t\tname: '',\r\n\t\tattribute: '',\r\n\t\tbuyPrices: ['0'],\r\n\t\tbuyCounts: ['0'],\r\n\t\tsellPrice: '0',\r\n\t\tid: Math.random()\r\n\t})\r\n\r\n\tconst updateGood = (value, field, buyData = false) => {\r\n\t\tif (buyData) {\r\n\t\t\tsetGood(prevState => ({\r\n\t\t\t\t...prevState,\r\n\t\t\t\t[field]: [value]\r\n\t\t\t}))\r\n\t\t} else {\r\n\t\t\tsetGood(prevState => ({\r\n\t\t\t\t...prevState,\r\n\t\t\t\t[field]: value\r\n\t\t\t}))\r\n\t\t}\r\n\t}\r\n\r\n\tconst addGood = async () => {\r\n\t\tif (firebase.collection.goods.some(e => e.name === good.name)) {\r\n\t\t\talert('Item with that name already exist')\r\n\t\t} else {\r\n\t\t\tawait firebase.addGood(good)\r\n\t\t\tupdateScreen('EditGood')\r\n\t\t}\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<label>Name</label>\r\n\t\t\t<input\r\n\t\t\t\tname='name'\r\n\t\t\t\tvalue={good.name}\r\n\t\t\t\tonChange={e => updateGood(e.target.value, 'name')}\r\n\t\t\t/>\r\n\r\n\t\t\t<label>Attribute</label>\r\n\t\t\t<input\r\n\t\t\t\tname='attribute'\r\n\t\t\t\tvalue={good.attribute}\r\n\t\t\t\tonChange={e => updateGood(e.target.value, 'attribute')}\r\n\t\t\t/>\r\n\r\n\t\t\t<label>Allbuy price</label>\r\n\t\t\t<input\r\n\t\t\t\tname='allbuyPrice'\r\n\t\t\t\tvalue={good.buyPrices[0]}\r\n\t\t\t\tonChange={e => updateGood(e.target.value, 'buyPrices', true)}\r\n\t\t\t/>\r\n\r\n\t\t\t<label>Allbuy count</label>\r\n\t\t\t<input\r\n\t\t\t\tname='allbuyCount'\r\n\t\t\t\tvalue={good.buyCounts[0]}\r\n\t\t\t\tonChange={e => updateGood(e.target.value,\r\n\t\t\t\t\t'buyCounts', true)}\r\n\t\t\t/>\r\n\r\n\t\t\t<label>Sell price</label>\r\n\t\t\t<input\r\n\t\t\t\tname='sellPrice'\r\n\t\t\t\tvalue={good.sellPrice}\r\n\t\t\t\tonChange={e => updateGood(e.target.value, 'sellPrice')}\r\n\t\t\t/>\r\n\r\n\t\t\t<button onClick={addGood}>Add</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default AddGood","import React, { useState, useEffect } from 'react'\r\nimport firebase from '../firebase'\r\n\r\nconst ListGoods = ({ chooseGood, title }) => {\r\n\r\n\tconst [goods, setGoods] = useState([])\r\n\tconst [loading, setLoading] = useState(true)\r\n\r\n\tconst getCollection = async () => {\r\n\t\tawait firebase.updateCollection()\r\n\t\tsetGoods(firebase.collection.goods)\r\n\t\tsetLoading(false)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetCollection()\r\n\t}, [])\r\n\r\n\r\n\tconst renderGoods = () => (\r\n\t\t<div>\r\n\t\t\t<h1>{title}</h1>\r\n\t\t\t{goods.length > 0 ?\r\n\t\t\t\t(<ul>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tgoods.map(e => (\r\n\t\t\t\t\t\t\t<li onClick={() => chooseGood(e)} key={e.id}>\r\n\t\t\t\t\t\t\t\t<p>Название: {e.name}</p>\r\n\t\t\t\t\t\t\t\t<p>Атрибут: {e.attribute}</p>\r\n\t\t\t\t\t\t\t\t{e.buyPrices.map((p, i) => (\r\n\t\t\t\t\t\t\t\t\t<p key={p}>Цена закупки: {p}, Количество: {e.buyCounts[i]} шт.</p>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t<p>Цена продажи: {e.sellPrice}</p>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t\t</ul>) :\r\n\t\t\t\t<div>Товаров пока нет</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\tloading ?\r\n\t\t\t\t\t<div className=\"loader\">Loading</div> :\r\n\t\t\t\t\trenderGoods()\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ListGoods","import React, { useState } from 'react'\r\nimport ListGoods from './ListGoods'\r\nimport firebase from '../firebase'\r\n\r\nconst EditGood = () => {\r\n\r\n\tconst [buyDataLen, setBuyDataLen] = useState(0)\r\n\tconst [oldGood, setOldGood] = useState({})\r\n\tconst [good, setGood] = useState({})\r\n\tconst [choosingGood, setChoosingGood] = useState(true)\r\n\tconst [saving, setSaving] = useState(false)\r\n\r\n\tconst delPutschareItem = index => {\r\n\r\n\t\tsetBuyDataLen(l => --l)\r\n\t\tlet buyPrices = [...good.buyPrices]\r\n\t\tlet buyCounts = [...good.buyCounts]\r\n\r\n\t\tbuyPrices.splice(index, 1)\r\n\t\tbuyCounts.splice(index, 1)\r\n\r\n\t\tsetGood(prevState => ({\r\n\t\t\t...prevState,\r\n\t\t\tbuyPrices,\r\n\t\t\tbuyCounts\r\n\t\t}))\r\n\t}\r\n\r\n\tconst updateGood = (value, field, index = -1) => {\r\n\t\tlet na\r\n\t\tif (index !== -1) {\r\n\t\t\tna = good[field]\r\n\t\t\tna[index] = value\r\n\t\t\tvalue = na\r\n\t\t}\r\n\t\tsetGood(prevState => ({ ...prevState, [field]: value }))\r\n\t}\r\n\r\n\tconst applyEditingGood = async () => {\r\n\t\tsetSaving(true)\r\n\t\tawait firebase.deleteGood(oldGood)\r\n\t\tawait firebase.addGood(good)\r\n\t\tsetSaving(false)\r\n\t\tsetChoosingGood(true)\r\n\t}\r\n\r\n\tconst deleteGood = () => {\r\n\t\tif (window.confirm('Are you really want to delete good?')) {\r\n\t\t\tfirebase.deleteGood(oldGood)\r\n\t\t\tsetChoosingGood(true)\r\n\t\t}\r\n\t}\r\n\r\n\tconst chooseGood = good => {\r\n\t\tsetGood(good)\r\n\t\tsetOldGood(good)\r\n\t\t// firebase.memorizeGood(good)\r\n\t\tsetChoosingGood(false)\r\n\t\tsetBuyDataLen(good.buyPrices.length)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{choosingGood ? <ListGoods chooseGood={chooseGood} title='Goods list' /> :\r\n\r\n\t\t\t\tgood.buyPrices ?\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h1>Editing</h1>\r\n\t\t\t\t\t\t<p>Название: </p>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\tvalue={good.name}\r\n\t\t\t\t\t\t\tonChange={e => updateGood(e.target.value, 'name')}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<p>Атрибут: </p>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tname='attribute'\r\n\t\t\t\t\t\t\tvalue={good.attribute}\r\n\t\t\t\t\t\t\tonChange={e => updateGood(e.target.value, 'attribute')}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t{good.buyPrices.map((p, i) => (<div style={{ border: '1px solid black' }} key={p}>\r\n\t\t\t\t\t\t\t<p>Цена закупки:</p>\r\n\t\t\t\t\t\t\t{/* ! Make money parser */}\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tname={`buyPrice${i}`}\r\n\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\tvalue={p}\r\n\t\t\t\t\t\t\t\tonChange={e => updateGood(e.target.value, 'buyPrices', i)}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<p>Количество:</p>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tname={`buyCount${i}`}\r\n\t\t\t\t\t\t\t\tvalue={good.buyCounts[i]}\r\n\t\t\t\t\t\t\t\tonChange={e => updateGood(e.target.value, 'buyCounts', i)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{buyDataLen > 1 && <button onClick={() => delPutschareItem(i)}>Clear</button>}\r\n\t\t\t\t\t\t</div>))}\r\n\r\n\t\t\t\t\t\t<p>Цена продажи:</p>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tname='sellPrice'\r\n\t\t\t\t\t\t\tvalue={good.sellPrice}\r\n\t\t\t\t\t\t\tonChange={e => updateGood(e.target.value, 'sellPrice')}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\r\n\t\t\t\t\t\t{saving && <div>Saving</div>}\r\n\r\n\t\t\t\t\t\t<button onClick={() => setChoosingGood(true)}>Cancel</button>\r\n\t\t\t\t\t\t<button onClick={deleteGood}>Delete</button>\r\n\t\t\t\t\t\t<button onClick={applyEditingGood}>Save changes</button>\r\n\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<br />\r\n\r\n\t\t\t\t\t</div> : <div>Loadingy</div>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default EditGood","import React, { useState } from 'react'\r\nimport ListGoods from './ListGoods'\r\nimport firebase from '../firebase'\r\n\r\n\r\nconst PurschareGood = () => {\r\n\r\n\tconst [choosingGood, setChoosingGood] = useState(true)\r\n\tconst [good, setGood] = useState({})\r\n\tconst [saving, setSaving] = useState(false)\r\n\r\n\tconst [price, setPrice] = useState('')\r\n\tconst [count, setCount] = useState('')\r\n\r\n\tconst chooseGood = good => {\r\n\t\tsetGood(good)\r\n\t\tsetChoosingGood(false)\r\n\t}\r\n\r\n\tconst purschare = async () => {\r\n\r\n\t\tif (price.length < 1 || count.length < 1) {\r\n\t\t\talert('Fill all fields')\r\n\t\t\treturn 0\r\n\t\t}\r\n\t\tlet check = price.replace(',', '.').split('.')\r\n\t\tif (check.length > 2 || check.find(e => (isNaN(e) || e < 0)) || (check.length === 2 && check[1].length > 2) || check[0][0] === '0') {\r\n\t\t\talert('Input valid price')\r\n\t\t\treturn 0\r\n\t\t}\r\n\r\n\t\tsetSaving(true)\r\n\r\n\t\tawait firebase.deleteGood(good)\r\n\t\tlet nGood = good\r\n\r\n\t\tconst priceIndex = good.buyPrices.indexOf(price)\r\n\r\n\t\tif (priceIndex === -1) {\r\n\t\t\tnGood.buyPrices.push(price)\r\n\t\t\tnGood.buyCounts.push(count)\r\n\t\t} else {\r\n\t\t\tnGood.buyPrices = nGood.buyPrices.map((e, i) => i === priceIndex ? price : e)\r\n\t\t\tnGood.buyCounts = nGood.buyCounts.map((e, i) => i === priceIndex ? parseFloat(e) + parseFloat(count) : e)\r\n\t\t}\r\n\r\n\t\tawait firebase.addGood(nGood)\r\n\t\tsetSaving(false)\r\n\t\tsetChoosingGood(true)\r\n\t\tsetPrice('')\r\n\t\tsetCount('')\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Purscharing</h1>\r\n\t\t\t{choosingGood ?\r\n\t\t\t\t<ListGoods chooseGood={chooseGood} title='Choose good to purschare' /> :\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1>{good.name}</h1>\r\n\r\n\t\t\t\t\t<p>Price</p>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname='price'\r\n\t\t\t\t\t\tvalue={price}\r\n\t\t\t\t\t\tonChange={e => setPrice(e.target.value)}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<p>Count</p>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname='count'\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tvalue={count}\r\n\t\t\t\t\t\tonChange={e => setCount(e.target.value.replace(/\\D/, ''))}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t{saving && <div className='saving'>Saving</div>}\r\n\t\t\t\t\t<button onClick={() => setChoosingGood(true)}>Choose another good</button>\r\n\t\t\t\t\t<button onClick={purschare}>Apply</button>\r\n\t\t\t\t</div>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default PurschareGood","import React, { useState, useEffect } from 'react'\r\nimport firebase from '../firebase'\r\nimport Login from '../Login/Login'\r\nimport MainScreen from '../MainScreen/MainScreen'\r\nimport NavPanel from '../NavPanel/NavPanel'\r\nimport AddGood from '../Goods/AddGood'\r\nimport EditGood from '../Goods/EditGood'\r\nimport PurschareGood from '../Goods/PurschareGood'\r\n\r\nconst App = () => {\r\n\tconst [firebaseInitialized, setFirebaseInitialized] = useState(false)\r\n\tconst [screen, setScreen] = useState('')\r\n\r\n\tconst initFirebase = async () => {\r\n\t\tconst res = await firebase.isInitialized()\r\n\t\tsetFirebaseInitialized(res)\r\n\r\n\t\t// if user authorized\r\n\t\tif (firebase.auth.currentUser) {\r\n\t\t\tfirebase.updateCollection()\r\n\t\t\tsetScreen('Main')\r\n\t\t} else {\r\n\t\t\tsetScreen('Login')\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tinitFirebase()\r\n\t}, [])\r\n\r\n\tconst screenSwitcher = () => {\r\n\t\tswitch (screen) {\r\n\t\tcase 'Login':\r\n\t\t\treturn <Login updateScreen={setScreen} />\r\n\t\tcase 'Main':\r\n\t\t\treturn <MainScreen updateScreen={setScreen} />\r\n\t\tcase 'AddGood':\r\n\t\t\treturn <AddGood updateScreen={setScreen} />\r\n\t\tcase 'EditGood':\r\n\t\t\treturn <EditGood />\r\n\t\tcase 'PurschareGood':\r\n\t\t\treturn <PurschareGood updateScreen={setScreen} />\r\n\t\tdefault:\r\n\t\t\treturn <div>Screen switcher error</div>\r\n\t\t}\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{firebaseInitialized !== false ? (<div>\r\n\t\t\t\t{screenSwitcher()}\r\n\t\t\t\t{screen != 'Login' && <NavPanel screen={screen} updateScreen={setScreen} />}\r\n\r\n\t\t\t</div>) : <div className=\"loader\">Loading</div>}\r\n\t\t</div>\r\n\t)\r\n\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}